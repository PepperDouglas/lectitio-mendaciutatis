@inject NavigationManager NavigationManager
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@inject HttpClient Http
@inject IHttpClientFactory HttpClientFactory

@page "/login"

<div class="container mt-5" style="max-width: 400px;">
    <h3 class="text-center mb-4">Login</h3>

    @if (errorMessage != null) {
        <div class="alert alert-danger">@errorMessage</div>
    }

    <EditForm Model="@loginDto" OnValidSubmit="HandleLogin">
        <div class="form-group">
            <label for="username">Username:</label>
            <InputText id="username" class="form-control" @bind-Value="loginDto.Username" />
        </div>
        <div class="form-group">
            <label for="password">Password:</label>
            <InputText id="password" class="form-control" @bind-Value="loginDto.Password" InputType="password" />
        </div>
        <button type="submit" class="btn btn-primary btn-block">Login</button>
    </EditForm>
</div>

@code {
    private LoginDto loginDto = new LoginDto();
    private string? errorMessage;

    private async Task HandleLogin()
    {
        try
        {
            var httpClient = HttpClientFactory.CreateClient("MyApiClient");
            var response = await httpClient.PostAsJsonAsync("/api/auth/login", loginDto);
            if (response.IsSuccessStatusCode)
            {
                var responseContent = await response.Content.ReadAsStringAsync();

                var result = await response.Content.ReadFromJsonAsync<Dictionary<string, string>>();
                var token = result["token"];
                await sessionStorage.SetItemAsync("jwtToken", token);

                NavigationManager.NavigateTo("/chat");
            }
            else
            {
                errorMessage = "Invalid credentials, try again.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = "An error occurred during login: " + ex.Message;
        }
    }

    public class LoginDto
    {
        public string Username { get; set; }
        public string Password { get; set; }
    }
}
